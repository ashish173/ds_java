import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class TheShuttles
{
	public int getLeastCost(int[] cnt, int baseCost, int seatCost)
	{
		
		int i=0, totalCost=0;
		Arrays.sort(cnt);
		int maxCount=cnt[cnt.length-1];
				
		System.out.println("Max count is :" + maxCount);
		for(int j=1; j<=maxCount; j++) {
			System.out.println("calling for size " + j);
			int newCost=0;
			for(i=0; i<cnt.length; i++) {
			 	System.out.println("calling for " + i+1 + " area");
			 	newCost += getLeast(j, cnt[i], cnt, baseCost, seatCost);
			 	 	
			}
			System.out.println("cost till " + j + "size is" + newCost);
			System.out.println();
			if(j==1)
				totalCost = newCost;
			else if(newCost < totalCost)
				totalCost = newCost;
		}
		System.out.println("this runs");
		return totalCost;
	}
	
	public int getLeast(int shuttleSize, int people ,int[] cnt, int baseCost, int seatCost) {
		int numberOfShuttles = people/shuttleSize;
		if(people%shuttleSize != 0)
			numberOfShuttles+= 1;		
		System.out.println("number od shutles used will be " + numberOfShuttles);
		int cost = numberOfShuttles * ( baseCost + (seatCost * shuttleSize) );
		return cost;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int p1, int p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + p1 + "," + p2);
		System.out.println("]");
		TheShuttles obj;
		int answer;
		obj = new TheShuttles();
		long startTime = System.currentTimeMillis();
		answer = obj.getLeastCost(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int p1;
		int p2;
		int p3;
		
		// ----- test 0 -----
		p0 = new int[]{9};
		p1 = 30;
		p2 = 5;
		p3 = 75;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{9,4};
		p1 = 30;
		p2 = 5;
		p3 = 150;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{9,4};
		p1 = 10;
		p2 = 5;
		p3 = 105;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{51,1,77,14,17,10,80};
		p1 = 32;
		p2 = 40;
		p3 = 12096;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
